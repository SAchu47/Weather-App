{"ast":null,"code":"var _jsxFileName = \"/home/coming---soon/coming_soon/WORK/weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport { unstable_batchedUpdates } from 'react-dom';\nconst API_KEY = '076a9e1b6b57e18bb24afc0daad58cbc';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=kerala,india&appid=${API_KEY}`);\n      const response = await api_data.json();\n      const api_data_his = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&appid=${API_KEY}`);\n      const response_his = await api_data_his.json();\n      console.log(response_his);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        temperature: this.calCelsius(response.main.temp),\n        humidity: response.main.humidity,\n        precepition: response_his.daily[0].rain\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      temperature: undefined,\n      humidity: undefined,\n      precepition: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelsius(temp) {\n    return Math.floor(temp - 273.15);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp: this.state.temperature,\n      hum: this.state.humidity,\n      pre: this.state.precepition,\n      description: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/coming---soon/coming_soon/WORK/weather-app/src/App.js"],"names":["React","Weather","unstable_batchedUpdates","API_KEY","App","Component","constructor","getWeather","api_data","fetch","response","json","api_data_his","coord","lat","lon","response_his","console","log","setState","city","name","country","sys","temperature","calCelsius","main","temp","humidity","precepition","daily","rain","state","undefined","icon","description","error","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AAEA,OAAO,qCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,uBAAT,QAAwC,WAAxC;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,UApBa,GAoBA,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uEAAsEN,OAAQ,EAAhF,CAA5B;AAEA,YAAMO,QAAQ,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AAEA,YAAMC,YAAY,GAAG,MAAMH,KAAK,CAAE,uDAAsDC,QAAQ,CAACG,KAAT,CAAeC,GAAI,QAAOJ,QAAQ,CAACG,KAAT,CAAeE,GAAI,UAASZ,OAAQ,EAAtH,CAAhC;AAEA,YAAMa,YAAY,GAAG,MAAMJ,YAAY,CAACD,IAAb,EAA3B;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,WAAKG,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEV,QAAQ,CAACW,IADH;AAEZC,QAAAA,OAAO,EAAEZ,QAAQ,CAACa,GAAT,CAAaD,OAFV;AAGZE,QAAAA,WAAW,EAAE,KAAKC,UAAL,CAAgBf,QAAQ,CAACgB,IAAT,CAAcC,IAA9B,CAHD;AAIZC,QAAAA,QAAQ,EAAElB,QAAQ,CAACgB,IAAT,CAAcE,QAJZ;AAKZC,QAAAA,WAAW,EAAEb,YAAY,CAACc,KAAb,CAAmB,CAAnB,EAAsBC;AALvB,OAAd;AAOD,KAvCY;;AAET,SAAKC,KAAL,GAAa;AACXZ,MAAAA,IAAI,EAAEa,SADK;AAEXX,MAAAA,OAAO,EAAEW,SAFE;AAGXC,MAAAA,IAAI,EAAED,SAHK;AAIXP,MAAAA,IAAI,EAAEO,SAJK;AAKXT,MAAAA,WAAW,EAAES,SALF;AAMXL,MAAAA,QAAQ,EAAEK,SANC;AAOXJ,MAAAA,WAAW,EAAEI,SAPF;AAQXE,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,KAAK,EAAE;AATI,KAAb;AAWA,SAAK7B,UAAL;AACH;;AAEDkB,EAAAA,UAAU,CAACE,IAAD,EAAO;AACf,WAAOU,IAAI,CAACC,KAAL,CAAWX,IAAI,GAAG,MAAlB,CAAP;AACD;;AAuBDY,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWZ,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWV,OAFtB;AAGE,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWR,WAHnB;AAIE,MAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWJ,QAJlB;AAKE,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWH,WALlB;AAME,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWG,WAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAYD;;AAvD+B;;AA0DlC,eAAe/B,GAAf","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport { unstable_batchedUpdates } from 'react-dom';\n\nconst API_KEY = '076a9e1b6b57e18bb24afc0daad58cbc';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n      this.state = {\n        city: undefined,\n        country: undefined,\n        icon: undefined,\n        main: undefined,\n        temperature: undefined,\n        humidity: undefined,\n        precepition: undefined,\n        description: \"\",\n        error: false\n      };\n      this.getWeather();\n  }\n\n  calCelsius(temp) {\n    return Math.floor(temp - 273.15)\n  }\n\n  getWeather = async () => {\n    const api_data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=kerala,india&appid=${API_KEY}`);\n    \n    const response  = await api_data.json();\n\n    const api_data_his = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&appid=${API_KEY}`); \n\n    const response_his = await api_data_his.json();\n\n\n    console.log(response_his)\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      temperature: this.calCelsius(response.main.temp),\n      humidity: response.main.humidity,\n      precepition: response_his.daily[0].rain\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n      <Weather \n        city={this.state.city} \n        country={this.state.country}\n        temp={this.state.temperature}\n        hum={this.state.humidity}\n        pre={this.state.precepition}\n        description={this.state.description}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}