{"ast":null,"code":"var _jsxFileName = \"/home/coming---soon/coming_soon/WORK/weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport Form from './app_component/form.component';\nconst API_KEY = '076a9e1b6b57e18bb24afc0daad58cbc';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n\n      if (city && country) {\n        const api_data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=kerala,india&appid=${API_KEY}`);\n        const response = await api_data.json();\n        const api_data_his = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&appid=${API_KEY}`);\n        const response_his = await api_data_his.json();\n        console.log(response_his);\n        this.setState({\n          city: response.name,\n          country: response.sys.country,\n          temperature: this.calCelsius(response.main.temp),\n          humidity: response.main.humidity,\n          precepition: response_his.daily[0].rain,\n          description: response.weather[0].description\n        });\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      temperature: undefined,\n      humidity: undefined,\n      precepition: undefined,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({\n          icon: icons.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: icons.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({\n          icon: icons.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: icons.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: icons.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: icons.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: icons.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: icons.Clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    return Math.floor(temp - 273.15);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      loadWeather: this.getWeather,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp: this.state.temperature,\n      hum: this.state.humidity,\n      pre: this.state.precepition,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/coming---soon/coming_soon/WORK/weather-app/src/App.js"],"names":["React","Weather","unstable_batchedUpdates","Form","API_KEY","App","Component","constructor","getWeather","e","preventDefault","country","target","elements","value","city","api_data","fetch","response","json","api_data_his","coord","lat","lon","response_his","console","log","setState","name","sys","temperature","calCelsius","main","temp","humidity","precepition","daily","rain","description","weather","get_WeatherIcon","weatherIcon","id","error","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport Form from './app_component/form.component';\n\nconst API_KEY = '076a9e1b6b57e18bb24afc0daad58cbc';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n      this.state = {\n        city: undefined,\n        country: undefined,\n        icon: undefined,\n        main: undefined,\n        temperature: undefined,\n        humidity: undefined,\n        precepition: undefined,\n        description: \"\",\n        error: false\n      };\n      \n\n      this.weatherIcon = {\n        Thunderstorm: \"wi-thunderstorm\",\n        Drizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Atmosphere: \"wi-fog\",\n        Clear: \"wi-day-sunny\",\n        Clouds: \"wi-day-fog\"\n      }\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    return Math.floor(temp - 273.15)\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if(city && country) {\n      const api_data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=kerala,india&appid=${API_KEY}`);\n    \n      const response  = await api_data.json();\n\n      const api_data_his = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&appid=${API_KEY}`); \n\n      const response_his = await api_data_his.json();\n\n\n      console.log(response_his)\n\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        temperature: this.calCelsius(response.main.temp),\n        humidity: response.main.humidity,\n        precepition: response_his.daily[0].rain,\n        description: response.weather[0].description,\n      })\n\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id)\n    }\n    else {\n      this.setState({\n        error: true\n      });\n    }\n\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n      <Form loadWeather={this.getWeather} error={this.state.error}/>\n      <Weather \n        city={this.state.city} \n        country={this.state.country}\n        temp={this.state.temperature}\n        hum={this.state.humidity}\n        pre={this.state.precepition}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}